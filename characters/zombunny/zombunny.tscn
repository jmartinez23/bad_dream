[gd_scene load_steps=21 format=2]

[ext_resource path="res://characters/zombunny/zombunny.gltf" type="PackedScene" id=1]
[ext_resource path="res://characters/enemy_animation_node_state_machine.tres" type="AnimationNodeStateMachine" id=2]
[ext_resource path="res://characters/character_audio_player.tscn" type="PackedScene" id=3]
[ext_resource path="res://characters/health.tscn" type="PackedScene" id=4]
[ext_resource path="res://characters/enemy.gd" type="Script" id=5]
[ext_resource path="res://audio/zombunny_hurt.wav" type="AudioStream" id=6]
[ext_resource path="res://audio/zombunny_death.wav" type="AudioStream" id=7]
[ext_resource path="res://characters/enemy_death_timer.tscn" type="PackedScene" id=8]
[ext_resource path="res://characters/enemy_attack_area.tscn" type="PackedScene" id=9]
[ext_resource path="res://characters/blood_particles.tscn" type="PackedScene" id=10]

[sub_resource type="CapsuleShape" id=24]
radius = 0.35
height = 0.7

[sub_resource type="AnimationNodeStateMachinePlayback" id=25]

[sub_resource type="CylinderShape" id=26]
radius = 0.5
height = 1.0

[sub_resource type="VisualShaderNodeColorConstant" id=27]
constant = Color( 0, 0.976471, 1, 1 )

[sub_resource type="VisualShader" id=28]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.000000, 0.976471, 1.000000);
	float n_out2p1 = 1.000000;

// Output:0
	EMISSION = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, 75 )
nodes/fragment/2/node = SubResource( 27 )
nodes/fragment/2/position = Vector2( 245, 242 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 5 )

[sub_resource type="ShaderMaterial" id=29]
resource_local_to_scene = true
shader = SubResource( 28 )

[sub_resource type="VisualShaderNodeColorConstant" id=21]

[sub_resource type="VisualShader" id=22]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out2p1 = 1.000000;

// Output:0
	EMISSION = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 0, 75 )
nodes/fragment/2/node = SubResource( 21 )
nodes/fragment/2/position = Vector2( 200, 200 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 5 )

[sub_resource type="ShaderMaterial" id=23]
shader = SubResource( 22 )

[sub_resource type="SphereMesh" id=30]
resource_local_to_scene = true
material = SubResource( 23 )
radius = 0.05
height = 0.1

[node name="Zombunny" instance=ExtResource( 1 )]
script = ExtResource( 5 )
speed = 4.0
score_value = 10
sink_speed = 0.75
reach = 0.5

[node name="CollisionShape" type="CollisionShape" parent="." index="2"]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0.577712, 0 )
shape = SubResource( 24 )

[node name="AnimationTree" type="AnimationTree" parent="." index="3"]
tree_root = ExtResource( 2 )
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/playback = SubResource( 25 )

[node name="CharacterAudioPlayer" parent="." index="4" instance=ExtResource( 3 )]
hurt_sound = ExtResource( 6 )
death_sound = ExtResource( 7 )

[node name="Health" parent="." index="5" instance=ExtResource( 4 )]
max_health = 20
health = 20

[node name="OmniLight" type="OmniLight" parent="." index="6"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.2, 0 )
light_color = Color( 0, 0.976471, 1, 1 )
light_energy = 2.0
omni_range = 3.0

[node name="DeathTimer" parent="." index="7" instance=ExtResource( 8 )]

[node name="AttackArea" parent="." index="8" instance=ExtResource( 9 )]

[node name="CollisionShape" parent="AttackArea" index="0"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0.155 )
shape = SubResource( 26 )

[node name="BloodParticles" parent="." index="9" instance=ExtResource( 10 )]
transform = Transform( -1, 0, -3.25841e-07, 0, 1, 0, 3.25841e-07, 0, -1, 0, 0, 0 )
material_override = SubResource( 29 )
draw_pass_1 = SubResource( 30 )
[connection signal="health_changed" from="Health" to="CharacterAudioPlayer" method="_on_Health_health_changed"]
[connection signal="health_depleted" from="Health" to="CharacterAudioPlayer" method="_on_Health_health_depleted"]
[connection signal="health_depleted" from="Health" to="." method="_on_Health_health_depleted"]
[connection signal="timeout" from="DeathTimer" to="." method="_on_DeathTimer_timeout"]

[editable path="AttackArea"]
